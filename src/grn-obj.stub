"
#include \"groonga.h\"
#include \"gauche_groonga.h\"
"

(include "gauche-groonga.types")

(define-enum GRN_INFO_ENCODING)
(define-enum GRN_INFO_SOURCE)
(define-enum GRN_INFO_DEFAULT_TOKENIZER)
(define-enum GRN_INFO_ELEMENT_SIZE)
(define-enum GRN_INFO_CURR_MAX)
(define-enum GRN_INFO_MAX_ELEMENT_SIZE)
(define-enum GRN_INFO_SEG_SIZE)
(define-enum GRN_INFO_CHUNK_SIZE)
(define-enum GRN_INFO_MAX_SECTION)
(define-enum GRN_INFO_HOOK_LOCAL_DATA)
(define-enum GRN_INFO_ELEMENT_A)
(define-enum GRN_INFO_ELEMENT_CHUNK)
(define-enum GRN_INFO_ELEMENT_CHUNK_SIZE)
(define-enum GRN_INFO_ELEMENT_BUFFER_FREE)
(define-enum GRN_INFO_ELEMENT_NTERMS)
(define-enum GRN_INFO_ELEMENT_NTERMS_VOID)
(define-enum GRN_INFO_ELEMENT_SIZE_IN_CHUNK)
(define-enum GRN_INFO_ELEMENT_POS_IN_CHUNK)
(define-enum GRN_INFO_ELEMENT_SIZE_IN_BUFFER)
(define-enum GRN_INFO_ELEMENT_POS_IN_BUFFER)
(define-enum GRN_INFO_ELEMENT_ESTIMATE_SIZE)
(define-enum GRN_INFO_NGRAM_UNIT_SIZE)

;;(define-enum GRN_INFO_VERSION)
;;(define-enum GRN_INFO_CONFIGURE_OPTIONS)
;;(define-enum GRN_INFO_CONFIG_PATH)

(define-enum GRN_INFO_PARTIAL_MATCH_THRESHOLD)
(define-enum GRN_INFO_II_SPLIT_THRESHOLD)
(define-enum GRN_INFO_SUPPORT_ZLIB)
(define-enum GRN_INFO_SUPPORT_LZO)

(define-cproc grn-obj-get-info
  (ctx::<grn-ctx>
   obj::<grn-obj> type::<uint>
   valuebuf::<grn-obj>) ::<grn-obj>
   (let* ([newobj::ScmGrnObj* (SCM_NEW ScmGrnObj)])
     (SCM_SET_CLASS newobj SCM_CLASS_GRN_OBJ)
     (set! (-> newobj h) (* (grn_obj_get_info (& (-> ctx h)) 
					      (& (-> obj h)) 
					      type
					      (& (-> valuebuf h)))))
     (result newobj)))

;;GRN_API grn_rc grn_obj_set_info(grn_ctx *ctx, grn_obj *obj, grn_info_type type, grn_obj *value)
